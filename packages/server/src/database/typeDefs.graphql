type Publisher {
	id: String!
	title: String!
	imageUrl: String!
}

type Program {
	id: String!
	title: String!
	titleInEnglish: String!
	imageUrl: String!
	category: String!
	podcasts: [Podcast]
	publisher: Publisher
}

type Podcast {
	_id: String!
	title: String!
	description: String!
	imageUrl: String!
	originalAudioUrl: String!
	audioUrl: String!
	durationInSeconds: Float!
	category: String!
	publisher: Publisher
	program: Program
	totalWeight: Float
	createdDate: String
	modifiedDate: String
}

type User {
	name: String!
	firebaseUid: String!
	imageUrl: String!
	provider: String!
}

type FM {
	id: String
	url: String
	title: String
	artist: String
	artwork: String
	province: String
}

type MyFm {
	allFm: [FM]
	favoriteFm: [FM]
}

type Query {
	getTopPodcasts: [Podcast]!
	getAllPrograms: [Program]!
	getProgramDetail(id: String!): Program!
	getFmList: [FM]
	getMyFavoriteFm(nid: String): [FM]
	getMyFm(nid: String): MyFm
}

type Response {
	success: Boolean!
	id: String
}

input SaveFavorite {
	nid: String!
	fmId: String
}

input PostLikeObj {
	nid: String
	articleId: String
	category: String
}

input RemoveLikeObj {
	nid: String
	articleId: String
}

input UserLoginInput {
	name: String
	firebaseUid: String
	profileImage: String
	accessToken: String!
	provider: String
}

type Mutation {
	loginUser(loginInput: UserLoginInput): Response
}
